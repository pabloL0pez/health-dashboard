import React from "react";
import { ReactNode } from "react";

export type IconType = 'search' | 'flame' | 'line3' | 'check' | 'caret-down';

const iconsDictionary: {[key in IconType]: (className?: string) => ReactNode} = {
  'search': (className) => {
    return (
      <svg className={className} width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M10 1C5.02944 1 1 5.02944 1 10C1 14.9706 5.02944 19 10 19C12.125 19 14.078 18.2635 15.6177 17.0319L20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L17.0319 15.6177C18.2635 14.078 19 12.125 19 10C19 5.02944 14.9706 1 10 1ZM3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10Z" fill="#000000"/>
      </svg>
    )
  },
  'flame': (className) => {
    return (
      <svg className={className} width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M9.64958 1.06227C9.67527 1.07083 9.71178 1.08315 9.75838 1.09928C9.85156 1.13152 9.9852 1.179 10.1535 1.24206C10.49 1.3681 10.9661 1.55676 11.5355 1.81077C12.6715 2.31751 14.193 3.09072 15.7215 4.15504C18.745 6.26051 22 9.6569 22 14.5393C22 16.6738 21.4305 18.7869 20.1046 20.3856C18.7552 22.0126 16.7095 23 14 23C13.9352 23 13.6752 22.9978 13.4169 22.8125C13.0566 22.5541 12.9699 22.154 13.0085 21.8667C13.0376 21.6501 13.1305 21.5025 13.1576 21.4602C13.1966 21.3993 13.234 21.3556 13.2534 21.3338C13.293 21.2893 13.3281 21.2581 13.3407 21.247C13.3575 21.2322 13.3716 21.2207 13.3801 21.214C13.4065 21.1929 13.4323 21.1745 13.4402 21.1689L13.4413 21.1681L13.5185 21.1136C13.5762 21.0727 13.6587 21.013 13.7588 20.9347C13.9606 20.7768 14.2297 20.546 14.4969 20.2526C15.0448 19.6509 15.5 18.8819 15.5 18C15.5 16.3681 14.571 14.8515 13.5067 13.669C12.9869 13.0914 12.4644 12.6266 12.0715 12.3065C12.0471 12.2866 12.0233 12.2674 12 12.2487C11.9767 12.2674 11.9529 12.2866 11.9285 12.3065C11.5356 12.6266 11.0131 13.0914 10.4933 13.669C9.42904 14.8515 8.5 16.3681 8.5 18C8.5 18.8887 8.95405 19.6581 9.49825 20.2564C9.76406 20.5486 10.0319 20.7778 10.2327 20.934C10.3323 21.0114 10.4142 21.0699 10.47 21.1087C10.4934 21.125 10.5115 21.1374 10.5281 21.1487L10.5401 21.1569C10.547 21.1616 10.5634 21.1727 10.5787 21.1837C10.5832 21.1869 10.6139 21.2088 10.6476 21.2376C10.6583 21.2467 10.6772 21.2631 10.6995 21.285C10.7154 21.3005 10.7647 21.3492 10.8157 21.4212C10.8424 21.4607 10.901 21.5658 10.9302 21.6325C10.9668 21.7437 10.9991 22.045 10.9733 22.2301C10.89 22.4561 10.6027 22.798 10.4241 22.9056C10.2979 22.9546 10.0834 22.9965 10 23C7.29045 23 5.24478 22.0126 3.89543 20.3856C2.56953 18.7869 2 16.6737 2 14.5393C2 11.9892 2.88357 10.3815 4.05286 9.15505C4.5965 8.58485 5.19715 8.10222 5.73579 7.66943C5.75008 7.65795 5.76432 7.6465 5.77852 7.63509C6.34602 7.17901 6.84273 6.77589 7.26778 6.31892C8.30821 5.20036 8.54446 4.18715 8.56055 3.49801C8.56885 3.14243 8.51857 2.85415 8.46943 2.66212C8.44495 2.56642 8.42112 2.49607 8.40592 2.45501C8.39834 2.43454 8.39298 2.42157 8.39089 2.41661C8.22725 2.05871 8.28834 1.63669 8.54841 1.34035C8.82218 1.02842 9.26272 0.934509 9.64958 1.06227ZM12.622 10.214C12.6607 10.241 12.7152 10.2795 12.7831 10.3291C12.9187 10.4281 13.1087 10.5717 13.3348 10.756C13.7856 11.1233 14.3881 11.6586 14.9933 12.331C16.179 13.6485 17.5 15.6319 17.5 18C17.5 18.9472 17.2103 19.7677 16.8256 20.4413C17.5441 20.1103 18.1163 19.65 18.5651 19.1089C19.516 17.9623 20 16.3451 20 14.5393C20 10.6378 17.405 7.76451 14.5785 5.79631C13.182 4.82379 11.7785 4.10916 10.7207 3.63727C10.666 3.61285 10.6122 3.5891 10.5595 3.56601C10.5278 4.72134 10.1107 6.19906 8.73222 7.68106C8.19401 8.25969 7.58503 8.7491 7.03517 9.191L7.0314 9.19404C6.46252 9.65123 5.95122 10.0623 5.5004 10.5351C4.65194 11.4251 4 12.5501 4 14.5393C4 16.3451 4.48402 17.9623 5.43489 19.1089C5.88233 19.6484 6.4524 20.1075 7.16781 20.4382C6.78613 19.7652 6.5 18.9462 6.5 18C6.5 15.6319 7.82096 13.6485 9.00671 12.331C9.61193 11.6586 10.2144 11.1233 10.6652 10.756C10.8913 10.5717 11.0813 10.4281 11.2169 10.3291C11.2848 10.2795 11.3393 10.241 11.378 10.214C11.7481 9.95634 12.2491 9.9544 12.622 10.214Z" fill="#000000"/>
      </svg>
    )
  },
  'line3': (className) => {
    return (
      <svg className={className} width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z" fill="#000000"/>
        <path d="M2 12C2 11.4477 2.44772 11 3 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H3C2.44772 13 2 12.5523 2 12Z" fill="#000000"/>
        <path d="M3 17C2.44772 17 2 17.4477 2 18C2 18.5523 2.44772 19 3 19H21C21.5523 19 22 18.5523 22 18C22 17.4477 21.5523 17 21 17H3Z" fill="#000000"/>
      </svg>
    )
  },
  'check': (className) => {
    return (
      <svg className={className} width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M17.8086 9.70558C18.1983 9.31421 18.1969 8.68105 17.8056 8.29137C17.4142 7.90169 16.781 7.90305 16.3913 8.29442L10.6215 14.0892L7.30211 10.816C6.90886 10.4283 6.27571 10.4327 5.88793 10.8259C5.50015 11.2192 5.50459 11.8524 5.89784 12.2401L9.92581 16.212C10.3177 16.5985 10.9482 16.5956 11.3366 16.2056L17.8086 9.70558Z" fill="#000000"/>
        <path fillRule="evenodd" clipRule="evenodd" d="M12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z" fill="#000000"/>
      </svg>
    );
  },
  'caret-down': (className) => {
    return (
      <svg className={className} width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M6.29289 8.79289C6.68342 8.40237 7.31658 8.40237 7.70711 8.79289L12 13.0858L16.2929 8.79289C16.6834 8.40237 17.3166 8.40237 17.7071 8.79289C18.0976 9.18342 18.0976 9.81658 17.7071 10.2071L12.7071 15.2071C12.3166 15.5976 11.6834 15.5976 11.2929 15.2071L6.29289 10.2071C5.90237 9.81658 5.90237 9.18342 6.29289 8.79289Z" fill="#000000"/>
      </svg>
    );
  },
}

interface IconProps {
  icon: IconType;
  className?: string;
}

const Icon = ({ icon, className }: Readonly<IconProps>) => {
  return iconsDictionary[icon](className);
}

export default Icon;